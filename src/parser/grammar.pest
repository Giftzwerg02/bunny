WHITESPACE = _{ " " | "\t" | NEWLINE }
COMMENT = ${ line_comment }
line_comment = { ";" ~ (!"\n" ~ ANY)* }

program = _{ SOI ~ func_call ~ EOI }

expr = { 
	 float 
	 | int 
	 | string 
	 | array 
	 | dict
	 | func_call 
	 | color 
	 | identifier
}

dict = {
	"[" ~ ":" ~ "]"
	| "[" ~ dict_assign* ~ "]"
}

dict_assign = {
	expr ~ ":" ~ expr
}

array = {
	"[" ~ expr* ~ "]"
}

args_list = {
	"(" ~ func_arguments ~ ")"
}

lambda_id = { "\\" }
def_id = { "def" }

lambda_func_call = {
	"(" ~ lambda_id ~ args_list? ~ expr ~ ")"
}

def_func_call = {
	"(" ~ def_id ~ identifier ~ args_list? ~ expr ~ ")"
}

normal_func_call = {
	"(" ~ identifier ~ func_arguments ~ ")"
}

func_call = {
	def_func_call
	| lambda_func_call
	| normal_func_call
	| "(" ~ func_call* ~ ")"
}

// maybe ensure positional-args preceed named-args at parse-time?
func_arguments = {
	(named_argument | positional_argument)*
}

named_argument = {
	identifier ~ ":" ~ expr
}

positional_argument = {
	expr
}

identifier = @{
	(ASCII_ALPHA | special_char) ~ (ASCII_ALPHANUMERIC | special_char)*
}

special_char = @{
	"+" | "-" | "*" | "/" | "$" | "^" | "ยง" | "%" | "&" | "=" | "`" | "<" | ">" | "|" | "_" | "@" | "~" | "\\"
}

int = @{ ASCII_DIGIT+ }
float = @{ ASCII_DIGIT+ ~ (("." ~ ASCII_DIGIT* ~ "f") | "f") }
string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }
color = @{
	"#" ~ (ASCII_DIGIT | 'a'..'f' | 'A'..'F'){6}
	| "#" ~ (ASCII_DIGIT | 'a'..'f' | 'A'..'F'){8}
}
