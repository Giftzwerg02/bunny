(
	(def fib (n) 
		(foldl
			(\ (acc num) (
				(def l (len acc))
				(def f1 (get acc (- l 1)))
				(def f2 (get acc (- l 2)))
				(append acc (+ f1 f2))
			))
			[0 1]
			(range 0 n)
		)
	)

	(fib until)
)
